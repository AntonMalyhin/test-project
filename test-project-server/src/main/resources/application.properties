#Id was taken from db/data-postgresql.sql for test purposes
app.code=APP_SCHOOL_ORDER
app.version=@project.version@

## Server
server.port=8080
server.contextPath=/

## Swagger
swagger.enabled=true

spring.profiles.active=default
spring.main.allow-bean-definition-overriding=true
spring.devtools.add-properties=false

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/rck
#spring.datasource.username=postgres
#spring.datasource.password=yotFeadvauv8

#spring.datasource.platform=postgresql
#spring.datasource.initialization-mode=always
#spring.datasource.continue-on-error=false

## Hikari will use the above plus the following to setup connection pooling
#spring.datasource.hikari.minimumIdle=5
#spring.datasource.hikari.maximumPoolSize=20
#spring.datasource.hikari.idleTimeout=30000
#spring.datasource.hikari.poolName=SpringBootJPAHikariCP
#spring.datasource.hikari.maxLifetime=2000000
#spring.datasource.hikari.connectionTimeout=30000

## JPA specific configs
#spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.show_sql=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.properties.hibernate.default_schema=edu
#spring.jpa.properties.hibernate.search.autoregister_listeners=false
#spring.jpa.properties.hibernate.bytecode.use_reflection_optimizer=false
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
##spring.jpa.properties.javax.persistence.validation.mode=none

## Flyway
#spring.flyway.locations=classpath:/db/migration, classpath:/db/migration-${spring.profiles.active}
#spring.flyway.schemas=flyway
#spring.flyway.baseline-on-migrate=true
#spring.flyway.validate-on-migrate=true
#spring.flyway.check-location=true

## Thymeleaf
spring.thymeleaf.cache=false

## Jackson
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.locale=uk_UA
spring.jackson.time-zone=Europe/Kiev
spring.jackson.mapper.default-view-inclusion=true

## Spring MVC
spring.mvc.locale=uk_UA
spring.mvc.locale-resolver=fixed

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## OAuth2 Config
#spring.security.oauth2.client.registration.kyivid.client-name=rck
#spring.security.oauth2.client.registration.kyivid.client-id=test-openid-rck
#spring.security.oauth2.client.registration.kyivid.client-secret=UOX7Q453970KdpMMWyraFmDAC1junJR3Kx8f3p0UuMYyydkspki1p2xD7hTq9ZjP0On0mei6sBoqW4MzOpT8p2L5tkf481
#spring.security.oauth2.client.registration.kyivid.redirect-uri={baseUrl}/api/auth/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.kyivid.scope=openid, profile, email, phone, address
#spring.security.oauth2.client.registration.kyivid.client-authentication-method=basic
#spring.security.oauth2.client.registration.kyivid.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.kyivid.provider=oidc-provider
#
#spring.security.oauth2.client.registration.documents.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.documents.client-id=test-openid-rck
#spring.security.oauth2.client.registration.documents.client-secret=UOX7Q453970KdpMMWyraFmDAC1junJR3Kx8f3p0UuMYyydkspki1p2xD7hTq9ZjP0On0mei6sBoqW4MzOpT8p2L5tkf481
#spring.security.oauth2.client.registration.documents.scope=openid
#spring.security.oauth2.client.registration.documents.provider=oidc-provider
#
### EGP provider config
#spring.security.oauth2.client.provider.oidc-provider.issuer-uri=https://openid2.egp.com.ua
#spring.security.oauth2.client.provider.oidc-provider.user-name-attribute=sub
#
### Resource Server config
#security.oauth2.resource.user-info-uri=https://openid2.egp.com.ua/userinfo
#security.oauth2.resource.prefer-token-info=true


## Custom security options
#Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent.
#https://openid.net/specs/openid-connect-core-1_0.html
#app.security.oauth2.client.authorization-req-param.prompt=login
#app.security.oauth2.localUserInfoUri=http://test-children-registry-admin-api.cloud.internal.egp.com.ua/api/auth/userinfo
#app.security.oauth2.localUserInfoUri=http://localhost:8080/api/auth/userinfo
#app.security.oauth2.allowedRedirectUrls=/
#app.security.allowedRedirectUrls=(http://test-children-registry\.cloud\.internal\.egp\.com\.ua|http://localhost:3000)(?![^/])

## File storage config
#file.storage.path=http://test-children-registry-doc-app.cloud.internal.egp.com.ua

## CORS
cors.allowedOrigins=*
cors.allowedMethods=GET, POST, DELETE, PUT, OPTIONS
cors.allowedHeaders=X-Requested-With, Origin, Content-Type, Accept
cors.allowCredentials=true
#cors.exposedHeaders=
cors.mapping=/**

## Logging
debug=false
spring.http.log-request-details=true

logging.level.root=INFO
logging.level.com.ucp.rck=DEBUG
#logging.level.org.hibernate=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
#logging.level.org.hibernate.validator=TRACE
logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.level.org.springframework.web.reactive.function.client=WARN
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=WARN
#logging.level.org.springframework.data=DEBUG
logging.level.org.springframework.security=WARN
logging.level.org.springframework.context=WARN
logging.level.org.springframework.boot.autoconfigure.security.oauth2.resource=WARN
logging.level.com.github.tennaito.rsql=WARN
logging.level.org.xhtmlrenderer=DEBUG

